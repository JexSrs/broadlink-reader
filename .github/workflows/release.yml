name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: read

jobs:
  build:
    name: Build docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11.1'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller setuptools
          python setup.py install

      - name: Build executables
        run: |
          pyinstaller --onefile src/reader.py
          pyinstaller --onefile src/writer.py

  release:
    name: Create release
    needs: [ build ]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    env:
      IMAGE_TAG: ${{ needs.variables.outputs.IMAGE_TAG }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ env.IMAGE_TAG }}
          body: This is an automated release, wait for the change log to be updated
          draft: false
          prerelease: false

      - name: Upload reader executable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/reader
          asset_name: reader
          asset_content_type: application/octet-stream

      - name: Upload writer executable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/writer
          asset_name: writer
          asset_content_type: application/octet-stream